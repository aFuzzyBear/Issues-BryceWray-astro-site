---
import Head from '@components/Head.astro';
import Header from '@components/Header.astro';
import Footer from '@components/Footer.astro';
import { format } from "date-fns";
import PagerThing from '@components/PagerThing.astro';

let title = 'Posts';
let description = 'Posts on brycewray.com';

// export async function getStaticPaths({ paginate, rss }) {
export async function getStaticPaths({ paginate }) {
  let allPosts = await Astro.glob('../posts/**/*.mdx');
  allPosts = allPosts
    .filter(post => !post.frontmatter.draft)
    .sort((a, b) =>
      new Date(b.frontmatter.date).valueOf() - new Date(a.frontmatter.date).valueOf()
  );
  // =========================================================
  // COMMENT OUT WHILE USING `feed` PACKAGE FOR RSS/JSON FEEDS
  // rss({
  //   title: "BryceWray.com",
  //   description: "brycewray.com â€” Observations, opinions, geekery.",
  //   customData: `<language>en-us</language>`,
  //   items: sortedPosts.map(post => ({
  //     title: post.frontmatter.title,
  //     stylesheet: true,
  //     description: post.frontmatter.description,
  //     link: post.url,
  //     pubDate: post.frontmatter.date
  //   })),
  //   dest: "/index.xml",
  // });
  // =========================================================
  return [
    paginate(allPosts, {
      pageSize: 5
    }),
  ];
}

const { page } = Astro.props;
---

<html lang="en">

  <head>
    <Head
      {title}
      {description}
    />
  </head>

  <body>
    <Header />
    <main data-pagefind-ignore>
      <div class="posts-Wrapper container ctr">
        <h1 class="posts-Head">Posts</h1>
        <div class="posts-Container">
          <PagerThing {page} />
          <hr class="paginatorTop" />
          <div class="posts-ItemDiv">
            {page.data.map(post =>
              <h2 class="posts-Title"><a href={post.url}>{post.frontmatter.title}</a></h2>
              <p class="posts-Description">
                {post.frontmatter.description}
              </p>
              <p class="posts-Dates"><strong>{format(new Date(post.frontmatter.date), "MMMM d, yyyy")}</strong>
                {post.frontmatter.lastmod && (
                  <br /><span class="eightyFive">Last modified {format(new Date(post.frontmatter.lastmod), "MMMM d, yyyy")}</span>
                )}
              </p>
            )}
          </div>
          <hr class="paginatorBottom" />
          <PagerThing {page} />
        </div>
      </main>
    <Footer />
  </body>
</html>

<style lang="scss">
  @use '../../styles/variables' as var; // SCSS partial
	.posts {
		&-Wrapper {
			background-image: linear-gradient(
				to bottom,
				var.$gray-3-blue,
				var.$gray-5-blue 5%,
				var.$gray-GitHub-blue
			);
			@media screen and (prefers-color-scheme: dark) {
				background-image: linear-gradient(
					to bottom,
					var.$gray-0-5,
					var.$black 30%
				);
			}
		}
		&-pagerGray {
			color: var.$gray-2;
		}
		&-pagerThing {
			// text-align: center;
			// font-size: 1.25em;
			// margin-top: 0.5rem;
			// margin-bottom: 0.5rem;
			display: flex;
			flex-direction: row;
			gap: 1em;
			justify-content: center;
			.pagerSpacer {
				width: 0.625em;
				@media screen and (min-width: var.$bkpt_md) {
					width: 1.25em;
				}
				@media screen and (min-width: var.$bkpt_lg) {
					width: 1.5em
				}
			}
		}
		&-Container {
			margin: 0 auto;
			width: 85%;
			@media screen and (min-width: var.$bkpt_lg) {
				width: 75%;
			}
			@media screen and (min-width: var.$bkpt_2xl) {
				width: 62.5%;
			}
		}
		&-ItemDiv {
			margin: 0;
			padding: 0;
		}
		&-Head {
			padding-top: clamp(1.75rem, 5vh, 3rem);
			font-size: clamp(2.5rem, 1rem + 3vw, 3.5rem);
			letter-spacing: -0.025em;
			margin-bottom: 0.25em;
		}
		&-Title {
			padding: 0;
			font-size: clamp(1.25rem, 0.625rem + 1.5vw, 2.25rem);
			// font-family: var.$serif;
			line-height: 1.25em;
			letter-spacing: -0.025em;
		}
		&-Description {
			font-size: clamp(1.1rem, 0.5rem + 1vw, 1.3rem);
			// font-family: var.$serif;
			font-style: italic;
			margin-top: 0.5em;
			margin-bottom: 0.25em;
		}
		&-Dates {
			font-size: clamp(0.825rem, 0.25rem + 1vw, 1.15rem);
			// font-size: 0.825rem;
			font-family: var.$sans-serif;
			line-height: 1.33;
			margin-bottom: 0.5em;
			time {
				display: inline;
			}
		}
	}

	.post-line {
		border-top: 0.2rem solid var.$darkblue;
		@media screen and (prefers-color-scheme: dark) {
			border-color: hsl(0, 0%, 100%);
		}
		display: block;
		margin: 0 auto 2rem;
		width: 15rem;
	}

	.bg-dark {
		// font-family: var.$sans-serif;
		margin-top: 2.5rem;
		background-color: var.$black;
		@media (prefers-color-scheme: dark) {
			background-color: var.$darkblue;
		}
		padding: 0.5rem 0;
		div, p {
			color: hsl(0, 0%, 100%);
		}
		h3, p {
			margin: 0;
			padding: 0.15rem 0;
			// font-style: normal;
		}
		h3.prevnextH3 {
			font-size: 1.875rem;
			font-style: normal;
		}
		p.prevnextP {
			width: 90%;
			margin-right: auto;
			margin-left: auto;
			font-size: 1.375rem;
		}
		a {
			color: hsl(204, 100%, 83%);
			border-bottom: 0;
		}
		a:hover, a:focus {
			color: var.$gray-2;
			border-bottom: 1px solid hsl(204, 100%, 83%);
		}
	}

	hr.paginatorTop, hr.paginatorBottom {
		border: none;
		height: 1px;
		background-color: var.$black;
		@media (prefers-color-scheme: dark) {
			background-color: var.$white;
		}
		width: clamp(65%, 75vw, 90%);
	}

	hr.paginatorTop {
		margin-top: 0.5em;
		margin-bottom: 1.5em;
	}

	hr.paginatorBottom {
		margin-top: 0em;
		padding: 0;
	}

	.giscus-comments {
		margin: 1.5em 0 2em;
	}

	.contactBtn {
		font-family: var.$sans-serif;
		text-align: center;
		margin: 0 auto 1em;
		button {
			width: 15rem;
			margin-top: 0.5em;
			padding: 0.25rem 0;
			background-color: var.$blue;
			border-radius: var.$btn_radius;
			border-color: transparent;
			vertical-align: middle;
			color: var.$white;
			&:focus, &:active, &:hover {
				background-color: var.$darkblue;
			}
			&:hover {
				cursor: pointer;
			}
			@media (prefers-color-scheme: dark) {
				color: var.$black;
				background-color: var.$code-color-blueLight-dark-mode;
				&:focus, &:active, &:hover {
					background-color: var.$blueLightBtn;
				}
			}
		}
	}

	.pagination {
		list-style-type: none;
		margin-block-start: 0;
		margin-inline-start: 0;
		margin-inline-end: 0;
		padding-inline-start: 0;
		li {
			display: inline;
		}
	}

	.arrowStop {
		color: var.$grayArrow;
	}

</style>
